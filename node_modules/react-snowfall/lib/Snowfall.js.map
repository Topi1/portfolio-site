{"version":3,"file":"Snowfall.js","names":["Snowfall","color","defaultConfig","changeFrequency","radius","speed","wind","rotationSpeed","snowflakeCount","images","style","mergedStyle","useSnowfallStyle","canvasRef","useRef","canvasSize","useComponentSize","animationFrame","lastUpdate","Date","now","config","useDeepMemo","snowflakes","useSnowflakes","render","useCallback","framesPassed","canvas","current","forEach","snowflake","update","ctx","getContext","setTransform","clearRect","offsetWidth","offsetHeight","draw","loop","msPassed","targetFrameTime","requestAnimationFrame","useEffect","cancelAnimationFrame","height","width"],"sources":["../src/Snowfall.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react'\r\nimport { targetFrameTime } from './config'\r\nimport { useComponentSize, useSnowfallStyle, useSnowflakes, useDeepMemo } from './hooks'\r\nimport { SnowflakeProps, defaultConfig } from './Snowflake'\r\n\r\nexport interface SnowfallProps extends Partial<SnowflakeProps> {\r\n  /**\r\n   * The number of snowflakes to be rendered.\r\n   *\r\n   * The default value is 150.\r\n   */\r\n  snowflakeCount?: number\r\n  /**\r\n   * Any style properties that will be passed to the canvas element.\r\n   */\r\n  style?: React.CSSProperties\r\n}\r\n\r\nconst Snowfall = ({\r\n  color = defaultConfig.color,\r\n  changeFrequency = defaultConfig.changeFrequency,\r\n  radius = defaultConfig.radius,\r\n  speed = defaultConfig.speed,\r\n  wind = defaultConfig.wind,\r\n  rotationSpeed = defaultConfig.rotationSpeed,\r\n  snowflakeCount = 150,\r\n  images,\r\n  style,\r\n}: SnowfallProps = {}): JSX.Element => {\r\n  const mergedStyle = useSnowfallStyle(style)\r\n\r\n  const canvasRef = useRef<HTMLCanvasElement>(null)\r\n  const canvasSize = useComponentSize(canvasRef)\r\n  const animationFrame = useRef(0)\r\n\r\n  const lastUpdate = useRef(Date.now())\r\n  const config = useDeepMemo<SnowflakeProps>({ color, changeFrequency, radius, speed, wind, rotationSpeed, images })\r\n  const snowflakes = useSnowflakes(canvasRef, snowflakeCount, config)\r\n\r\n  const render = useCallback(\r\n    (framesPassed = 1) => {\r\n      const canvas = canvasRef.current\r\n      if (canvas) {\r\n        // Update the positions of the snowflakes\r\n        snowflakes.forEach((snowflake) => snowflake.update(canvas, framesPassed))\r\n\r\n        // Render them if the canvas is available\r\n        const ctx = canvas.getContext('2d')\r\n        if (ctx) {\r\n          ctx.setTransform(1, 0, 0, 1, 0, 0)\r\n          ctx.clearRect(0, 0, canvas.offsetWidth, canvas.offsetHeight)\r\n\r\n          snowflakes.forEach((snowflake) => snowflake.draw(ctx))\r\n        }\r\n      }\r\n    },\r\n    [snowflakes],\r\n  )\r\n\r\n  const loop = useCallback(() => {\r\n    // Update based on time passed so that a slow frame rate won't slow down the snowflake\r\n    const now = Date.now()\r\n    const msPassed = Date.now() - lastUpdate.current\r\n    lastUpdate.current = now\r\n\r\n    // Frames that would have passed if running at 60 fps\r\n    const framesPassed = msPassed / targetFrameTime\r\n\r\n    render(framesPassed)\r\n\r\n    animationFrame.current = requestAnimationFrame(loop)\r\n  }, [render])\r\n\r\n  useEffect(() => {\r\n    loop()\r\n    return () => cancelAnimationFrame(animationFrame.current)\r\n  }, [loop])\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      height={canvasSize.height}\r\n      width={canvasSize.width}\r\n      style={mergedStyle}\r\n      data-testid=\"SnowfallCanvas\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default Snowfall\r\n"],"mappings":"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"}